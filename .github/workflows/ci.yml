---
name: CI

on:
  pull_request:

jobs:
  build-and-test:

    name: ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        toolchain:
          - linux-gcc

        configuration:
          - Debug

        include:
          - toolchain: linux-gcc
            os: ubuntu-latest
            compiler: gcc

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Cache build
        uses: actions/cache@v4
        with:
          path: |
            build/
            !build/_deps/opencv-src/
          key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt', '**/Dependencies.cmake') }}
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Configure (${{ matrix.configuration }})
        run: cmake -S . -Bbuild -DCMAKE_BUILD_TYPE=${{ matrix.configuration }}

      - name: Build with ${{ matrix.compiler }}
        run: cmake --build build --config ${{ matrix.configuration }}

      - name: Clean up build artifacts
        run: |
          cd build
          find . -name "*.o" -delete
          find . -name "*.obj" -delete
          find . -name "*.a" -delete
          find . -name "*.lib" -delete
          find . -name "CMakeFiles" -type d -exec rm -rf {} + 2>/dev/null || true
          find . -name "_deps" -type d -exec rm -rf {} + 2>/dev/null || true
          echo "Cleaned up build artifacts"

      - name: Test
        working-directory: build
        env:
          CTEST_OUTPUT_ON_FAILURE: 1
        run: ctest -C ${{ matrix.configuration }}

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            build/cv
            build/libengine.so
            build/tests/*
            !build/_deps/
            !build/CMakeFiles/
            !build/**/*.o
            !build/**/*.obj
            !build/**/*.a
            !build/**/*.lib
